import { ISelectOption } from "@/components/Select/types";

export interface ICaseHistoryState {
  loading: boolean;
  firstName: string;
  currentStatus: string;
  lastName: string;
  involuntaryAdmissionType: string;
  UHID: string;
  gender: string;
  advanceExplained: string[];
  admissionDate: string;
  dateOfBirth: string;
  age: string;
  referralDetails: string;
  referredTypeId: string;
  identificationMark: string;
  email: string;
  mobileNo: string;
  patientPicUrl: string;
  alternateMobileNo: string;
  guardianName: string;
  country: string;
  address: string;
  illnessType: string;
  patientCondition: string;
  conditionDetails: string;
  coverageStatus: string;
  emergencyContactName: string;
  emergencyContactNumber: string;
  emergencyContactRelation: string;
  emergencyContactAddress: string;
  reference: string;
  referredBy: string;
  referredByName: string;
  referredByAge: string;
  involuntary: string;
  patientChecklist: string[];
  admissionId: string;
  patiendIdProofNumber: string;
  patientIdProofType: string;
  nominatedRelationWithPatient: string;
  nominatedFullName: string;
  nominatedAge: string;
  nominatedGender: string;
  nominatedIdProofType: string;
  nominatedIdProofNumber: string;
  payerRelationWithPatient: string;
  payerFullName: string;
  payerAge: string;
  payerGender: string;
  payerIdProofType: string;
  payerIdProofNumber: string;
  education: string;
  placeOfStay: string;
  familyIncome: string;
  religion: string;
  language: string;
  ismarried: boolean | null;
  numberOfChildren: string;
  occupation: string;
  center: string;
  roomType: string;
  room: string;
  bedNo: string;
  lockerNo: string;
  assignedDoctor: string;
  assignedTherapist: string;
  belongingsInLocker: string;
  testReport: string;
  testReportName: string;
}

interface InformantsDetails {
  name: string;
  relationshipWithPatient: ISelectOption;
  reliabilityAndAdequacy: string;
  knownToPatient: string;
}
interface ISubstanceUseHistory {
  ageAtFirstUse: string;
  substanceUsed: string;
  duration: string;
  abstinencePeriodAndReason: string;
  relapsesAndReason: string;
  averageDose: string;
  maximumDose: string;
  lastIntake: string;
}
export interface ICaseHistoryData {
  _id?: string;
  isAdvanceDirectiveSelected?: boolean | "";
  fatherName?: string;
  motherName?: string;
  advanceDirective?: string;
  informantsDetails?: InformantsDetails[];
  substanceUseHistory?: ISubstanceUseHistory[];
  chiefComplaints?: string;
  onset?: ISelectOption;
  onsetOther?: string;
  course?: ISelectOption;
  courseOther?: string;
  progress?: ISelectOption;
  totalDurationOfIllness?: string;
  durationThisEpisode?: string;
  perpetuating?: string;
  predisposing?: string;
  precipitatingFactors?: string;
  impactOfPresentIllness?: ISelectOption;
  negativeHistory?: string;
  pastPsychiatricHistory?: string;
  pastPsychiatricTreatmentHistory?: string;
  pastMedicalHistory?: string;
  historyofPsychiatricIllness?: string;
  prenatal?: string;
  natal?: string;
  postnatal?: string;
  developmentalMilestone?: string;
  immunizationStatus?: string;
  achievements?: string;
  complaintsAtSchool?: string;
  occupationalHistory?: string;
  sexualHistory?: string;
  ageAtMenarche?: string;
  regularity?: string;
  noOfDaysOfMenses?: string;
  lastMenstrualPeriod?: string;
  maritalHistoryStatus: string;
  spouseDetails: string;
  religiousHistory?: string;
  // TODO: Later Remove Substance use History Field because used them in array
  ageAtFirstUse?: string;
  substanceUsed?: string;
  duration?: string;
  abstinencePeriodAndReason?: string;
  relapsesAndReason?: string;
  averageDose?: string;
  maximumDose?: string;
  lastIntake?: string;
  // Substance use History End
  socialRelationsWitFamilyOrFriendsOrColleagues?: string;
  hobbiesOrInterests?: string;
  personalityTraits?: string;
  mood?: string;
  characterOrAttitudeToWorkOrResponsibility?: string;
  habits?: string;
  kemptAndTidy?: string;
  withdrawn?: string;
  lookingAtOneAge?: string;
  overfriendly?: string;
  dressAppropriate?: string;
  suspicious?: string;
  eyeContact?: string;
  posture?: string;
  cooperative?: string;
  grimaces?: string;
  helpSeeking?: string;
  guarded?: string;
  ingratiated?: string;
  hostile?: string;
  submissive?: string;
  psychomotorActivity?: string;
  rate?: string;
  goalDirected?: string;
  volume?: string;
  spontaneous?: string;
  pitchOrTone?: string;
  coherent?: string;
  reactionTime?: string;
  relevant?: string;
  objective?: string;
  subjective?: string;
  affect?: string;
  range?: string;
  reactivity?: string;
  stream?: string;
  form?: string;
  content?: string;
  possession?: string;
  hallucination?: string;
  hallucinationSample?: string;
  illusion?: string;
  illusionSample?: string;
  time?: string;
  place?: string;
  person?: string;
  digitSpanTest?: string;
  serialSubtractionTest?: string;
  immediate?: string;
  recent?: string;
  remote?: string;
  generalFundOfKnowledge?: string;
  arithmetic?: string;
  comprehesion?: string;
  similaritiesOrDissimilarities?: string;
  proverbs?: string;
  personal?: string;
  social?: string;
  test?: string;
  insightGrade?: ISelectOption;
  insight?: string;
  diagnosticFormulation?: string;
  provisionalDiagnosis?: string;
  differentialDiagnosis?: string;
  targetSymptoms?: string;
  pharmacologicalPlan?: string;
  nonPharmacologicalPlan?: string;
  reviewsRequired?: string;
  psychologicalAssessments?: string;
  investigations?: string;
}

interface Relationship {
  _id: string;
  shortName: string;
  fullName: string;
  createdAt: string;
  __v: number;
}
export interface IFamilyData {
  _id?: string;
  patientId?: string;
  infoType?: string[];
  relationshipId?: Relationship;
  name?: string;
  phoneNumberCountryCode?: string;
  phoneNumber?: string;
  age?: number;
  address?: string;
  idProffType?: string;
  idProffNumber?: string;
}
